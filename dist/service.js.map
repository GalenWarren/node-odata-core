{"version":3,"sources":["service.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAQa,oCADZ,wCAAO,gCAAI,EAAJ,kBAAP;;;;;;AAMC,WALW,OAKX,CAAY,QAAZ,EAAsB;0BALX,SAKW;;AACpB,SAAK,QAAL,GAAgB,QAAhB,CADoB;GAAtB;;;;;;;eALW;;;2EAYG;YAGN;;;;;;;0BAAU,EAAE,KAAK,QAAL,CAAF,CAAiB,IAAjB,CAAuB;yBAAK,EAAE,SAAF,CAAa,OAAb;iBAAL;;oBAClC;;;;;sBACG,IAAI,SAAJ,CAAc,GAAd;;;;uBAIF,QAAQ,MAAR,CAAgB,OAAhB;;;;;;;;;;;;;;;;SArBG","file":"service.js","sourcesContent":["import {inject,All} from \"aurelia-dependency-injection\";\n\nimport {Handler} from \"./handler\";\n\n/**\n* The main service class\n*/\n@inject(All.of(Handler))\nexport class Service {\n\n  /**\n  * Construction\n  */\n  constructor(handlers) {\n    this.handlers = handlers;\n  }\n\n  /**\n  * Handles a request in the supplied context\n  */\n  async handle( context ) {\n\n    // look for the appropriate handler\n    const handler = _(this.handlers).find( h => h.canHandle( context ));\n    if (!handler) {\n      throw new HttpError(400);\n    }\n\n    // handle it\n    await handler.handle( context );\n\n  }\n\n}\n"],"sourceRoot":"/source/"}