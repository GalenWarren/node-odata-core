{"version":3,"sources":["service.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;IAGa;;;;;;AAKX,WALW,OAKX,OAAmC;QAArB,yBAAqB;QAAX,uBAAW;;0BALxB,SAKwB;;AACjC,SAAK,QAAL,GAAgB,QAAhB,CADiC;AAEjC,SAAK,OAAL,GAAe,OAAf,CAFiC;GAAnC;;;;;;;eALW;;;2EAaG;;;;;;;uBAKJ,KAAK,QAAL,CAAc,gBAAd,CAAgC,QAAQ,OAAR,EAAiB,QAAQ,QAAR;;;;;;;;;;;;;;;;;;;;;;;;;SAlBhD","file":"service.js","sourcesContent":["/**\n* The main service class\n*/\nexport class Service {\n\n  /**\n  * Construction\n  */\n  constructor({ provider, options }) {\n    this.provider = provider;\n    this.options = options;\n  }\n\n  /**\n  * Handles a request in the supplied context\n  */\n  async handle( context ) {\n\n    try {\n\n      // use the provider to populate the response\n      await this.provider.populateResponse( context.request, context.response );\n    }\n    catch (err) {\n\n      // handle errors kgw!\n      throw err;\n\n    }\n\n    // check for not found -- kgw put back!\n    /*\n    if (_.isUndefined( context.response.status )) {\n      context.response.status = 404;\n    }*/\n\n  }\n\n}\n"],"sourceRoot":"/source/"}