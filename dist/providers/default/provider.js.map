{"version":3,"sources":["providers/default/provider.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;IAMa;;;;;;AAKX,WALW,eAKX,OAAmC;QAArB,2CAAqB;;0BALxB,iBAKwB;;AACjC,SAAK,iBAAL,GAAyB,iBAAzB,CADiC;GAAnC;;;;;;;eALW;;gCAYE,MAAO;AAClB,UAAM,WAAW,KAAK,iBAAL,CAAwB,IAAxB,CAAX,CADY;AAElB,UAAI,CAAC,QAAD,EAAW;AACb,cAAM,IAAI,KAAJ,wBAA+B,mBAA/B,CAAN,CADa;OAAf;AAGA,aAAO,QAAP,CALkB;;;;SAZT","file":"providers/default/provider.js","sourcesContent":["import {Provider} from \"../provider\";\nimport _ from \"lodash\";\n\n/**\n* The default provider, that just operates on arrays\n*/\nexport class DefaultProvider {\n\n  /**\n  * The entities map is a map of entity names to arrays of objects\n  */\n  constructor({ entityCollections }) {\n    this.entityCollections = entityCollections;\n  }\n\n  /**\n  * Gets a set of entities\n  */\n  getEntities( name ) {\n    const entities = this.entityCollections[ name ];\n    if (!entities) {\n      throw new Error(`Entity collection ${name} not found`);\n    }\n    return entities;\n  }\n\n}\n"],"sourceRoot":"/source/"}