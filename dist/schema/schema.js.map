{"version":3,"sources":["schema/schema.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAGA,IAAM,eAAe,EAAf;;;;;;IAKO;;;;;;AAKX,WALW,MAKX,GAAc;0BALH,QAKG;;AACZ,SAAK,QAAL,GAAgB,IAAI,GAAJ,EAAhB,CADY;GAAd;;;;;;;eALW;;oCAYM,cAAe;AAC9B,WAAK,QAAL,CAAc,GAAd,CAAmB,aAAa,MAAb,EAAqB,YAAxC,EAD8B;;;;;;;;;0BAOH;UAAjB,6DAAK,yBAAY;;AAC3B,UAAI,SAAS,aAAc,IAAd,CAAT,CADuB;AAE3B,UAAI,CAAC,MAAD,EAAS;AACX,iBAAS,aAAa,IAAb,IAAqB,IAAI,MAAJ,EAArB,CADE;OAAb;AAGA,aAAO,MAAP,CAL2B;;;;SAnBlB","file":"schema/schema.js","sourcesContent":["import _ from \"lodash\";\n\n// the named schemas\nconst namedSchemas = {};\n\n/**\n* The schema class\n*/\nexport class Schema {\n\n  /**\n  * Constructor\n  */\n  constructor() {\n    this.entities = new Map();\n  }\n\n  /**\n  * Adds an entity schema object\n  */\n  setEntitySchema( entitySchema ) {\n    this.entities.set( entitySchema.target, entitySchema );\n  }\n\n  /**\n  * Returns a schema by name\n  */\n  static get( name=\"default\" ) {\n    let schema = namedSchemas[ name ];\n    if (!schema) {\n      schema = namedSchemas[name] = new Schema();\n    }\n    return schema;\n  }\n\n}\n"],"sourceRoot":"/source/"}