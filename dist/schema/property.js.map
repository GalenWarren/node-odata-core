{"version":3,"sources":["schema/property.js"],"names":[],"mappings":";;;;;;QAuBgB;QAyBA;;;;;;;;;;;;;AA3ChB,IAAM,gBAAgB,QAAhB;;;;;;IAKO,0CAEX,SAFW,cAEX,OAA4B;MAAd,iBAAc;MAAR,iBAAQ;;wBAFjB,gBAEiB;;AAC1B,OAAK,IAAL,GAAY,IAAZ,CAD0B;AAE1B,OAAK,IAAL,GAAY,IAAZ,CAF0B;CAA5B;;;;;;;;AAWK,SAAS,QAAT,QAAkC;MAAd,kBAAc;MAAR,kBAAQ;;;AAEvC,SAAO,UAAU,MAAV,EAAkB,YAAlB,EAAiC;;;AAGtC,QAAM,eAAe,wBAAa,MAAb,CAAf,CAHgC;AAItC,QAAI,aAAa,aAAc,aAAd,CAAb,CAJkC;AAKtC,QAAI,CAAC,UAAD,EAAa;AACf,mBAAa,aAAc,aAAd,IAAgC,EAAhC,CADE;KAAjB;;;AALsC,QAUhC,aAAa,QAAQ,YAAR,CAVmB;AAWtC,eAAY,YAAZ,IAA6B,IAAI,cAAJ,CAAmB;AAC9C,YAAM,UAAN;AACA,YAAM,IAAN;KAF2B,CAA7B,CAXsC;GAAjC,CAFgC;CAAlC;;;;;AAyBA,SAAS,aAAT,CAAwB,MAAxB,EAAiC;AACtC,SAAO,wBAAc,MAAd,EAAwB,aAAxB,KAA2C,EAA3C,CAD+B;CAAjC","file":"schema/property.js","sourcesContent":["import _ from \"lodash\";\n\nimport {getPrototype} from \"./util\";\n\n// some keys\nconst propertiesKey = Symbol();\n\n/**\n* Class for property schema\n*/\nexport class PropertySchema {\n\n  constructor({ name, type }) {\n    this.name = name;\n    this.type = type;\n  }\n\n}\n\n/**\n* Property decorator, adds metadata to the parent class\n* about this property\n*/\nexport function property({ name, type }) {\n\n  return function( target, propertyName ) {\n\n    // access the properties\n    const actualTarget = getPrototype(target);\n    let properties = actualTarget[ propertiesKey ];\n    if (!properties) {\n      properties = actualTarget[ propertiesKey ] = {};\n    }\n\n    // assign the property\n    const actualName = name || propertyName;\n    properties[ propertyName ] = new PropertySchema({\n      name: actualName,\n      type: type\n    });\n\n  }\n\n}\n\n/**\n* Gets all properties\n*/\nexport function getProperties( target ) {\n  return getPrototype( target )[ propertiesKey ] || {};\n}\n"],"sourceRoot":"/source/"}